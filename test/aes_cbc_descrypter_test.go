package test

import (
	"testing"

	"github.com/DLTcollab/vehicle-data-explorer/models/endpoint_CBCDecrypter"

	"github.com/stretchr/testify/assert"
)

func Test_Endpoint_CBCDecrypter(t *testing.T) {
	var test_payload = []byte{
		99, 44, 121, 217, 149, 161, 127, 33, 133, 77, 125, 156, 53, 53, 248, 95, 57, 196, 141, 90, 121, 158,
		133, 218, 153, 153, 24, 84, 32, 245, 68, 131, 33, 189, 93, 182, 94, 220, 215, 227, 42, 85, 127, 95,
		138, 119, 190, 196, 60, 75, 30, 181, 233, 164, 143, 130, 61, 167, 214, 93, 156, 26, 225, 189, 216, 62,
		116, 54, 26, 75, 26, 68, 160, 153, 163, 43, 17, 97, 239, 77, 172, 13, 0, 149, 177, 145, 24, 239,
		57, 238, 76, 213, 9, 45, 147, 225, 107, 7, 23, 134, 82, 49, 202, 243, 203, 110, 30, 220, 207, 13,
		41, 124, 26, 43, 17, 204, 188, 41, 187, 245, 24, 7, 203, 33, 53, 94, 2, 160, 101, 25, 38, 183,
		75, 241, 170, 22, 95, 200, 242, 46, 213, 27, 170, 240, 70, 188, 188, 2, 229, 119, 248, 253, 126, 195,
		30, 179, 33, 32, 84, 134, 58, 122, 61, 133, 107, 232, 155, 202, 176, 141, 249, 134, 168, 163, 118, 238,
		95, 50, 240, 69, 169, 232, 66, 39, 171, 97, 219, 204, 129, 47, 82, 187, 169, 144, 64, 21, 120, 219,
		223, 40, 104, 216, 174, 16, 124, 36, 254, 219, 86, 239, 32, 255, 215, 99, 39, 131, 196, 2, 79, 69,
		49, 162, 1, 218, 50, 65, 239, 170, 29, 207, 210, 133, 167, 129, 150, 35, 165, 148, 255, 252, 131, 31,
		251, 91, 130, 34, 222, 70, 36, 45, 140, 85, 207, 141, 48, 1, 206, 31, 171, 235, 238, 126, 113, 0, 0, 0, 0, 0, 0, 0, 0, 0}
	var test_iv = []byte{43, 14, 145, 54, 106, 123, 234, 233, 175, 66, 106, 177, 224, 90, 248, 73}

	var test_private_key = []byte{82, 142, 184, 64, 74, 105, 126, 65, 154, 116, 14, 193, 208, 41, 8, 115,
		158, 252, 228, 160, 79, 5, 167, 185, 13, 159, 135, 113, 49, 209, 58, 68}
	var test_cipher_text = []byte{221, 112, 98, 119, 79, 98, 103, 236, 155, 124, 52, 109, 79, 221, 255, 81, 66, 56, 151, 230, 29, 107, 252, 127, 9, 231, 159, 97, 186, 104, 192, 13, 81, 159, 108, 110, 158, 241, 140, 64, 228, 204, 173, 182, 15, 58, 1, 230, 162, 147, 187, 71, 50, 209, 75, 155, 86, 131, 110, 169, 99, 92, 62, 56, 107, 101, 121, 19, 101, 142, 37, 96, 255, 107, 97, 220, 126, 246, 246, 83, 232, 113, 179, 96, 146, 73, 244, 209, 235, 227, 176, 118, 12, 66, 60, 174, 183, 94, 15, 246, 172, 57, 147, 155, 50, 200, 193, 43, 208, 64, 10, 37, 55, 154, 248, 237, 50, 209, 249, 230, 251, 154, 41, 156, 206, 49, 229, 87, 211, 118, 104, 93, 75, 122, 132, 204, 223, 135, 37, 68, 115, 50, 134, 199, 143, 72, 27, 46, 178, 10, 162, 229, 88, 184, 188, 125, 93, 68, 109, 178, 249, 136, 228, 183, 1, 139, 179, 12, 92, 191, 19, 82, 209, 120, 100, 58, 6, 188, 60, 36, 210, 184, 247, 238, 126, 140, 201, 126, 42, 224, 31, 164, 76, 25, 243, 218, 100, 29, 246, 38, 110, 143, 230, 74, 45, 123, 37, 87, 54, 244, 59, 67, 246, 203, 76, 46, 254, 95, 30, 253, 177, 56, 84, 63, 124, 124, 208, 147, 88, 214, 207, 56, 178, 59, 188, 82, 203, 92, 59, 202, 26, 167, 29, 14, 65, 232, 217, 108, 20, 72, 69, 0, 145, 180, 171, 67, 134, 43, 252, 98, 90, 79, 60, 151, 237, 236, 254, 148, 169, 149, 79, 220}

	var str_cipher_text = string(test_cipher_text)
	var str_iv = string(test_iv)
	var str_private_key = string(test_private_key)

	assert.Equal(t, []byte(endpoint_CBCDecrypter.Endpoint_CBCDecrypter(str_cipher_text, str_private_key, str_iv)), test_payload)
}
